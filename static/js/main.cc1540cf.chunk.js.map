{"version":3,"sources":["cmps/MoviePreview.js","cmps/MovieList.js","services/MovieService.js","cmps/NavBar.js","cmps/Header.js","cmps/AboutUs.js","cmps/Modal.js","pages/Home.js","App.js","serviceWorker.js","index.js","styles/imgs/right-arrow.png","styles/imgs/left-arrow.png","styles/imgs/home.png","styles/imgs/movie.png","styles/imgs/about.png","styles/imgs/Thor-2.jpg","styles/imgs/america.jpg","styles/imgs/spider.png","styles/imgs/02.png"],"names":["MoviePreview","onSelectedMovie","props","movie","className","onClick","this","src","poster_path","Component","MovieList","onChangeOption","ev","value","target","onChangePage","name","movies","category","left","map","i","key","right","Axios","create","withCredentials","headers","getMovies","getTrailer","pageNum","a","get","data","movieId","NavBar","activeClass","to","smooth","offset","duration","home","about","Header","calc","o","ref","useRef","useSpring","setOffset","handleScroll","posY","current","getBoundingClientRect","top","window","pageYOffset","useEffect","addEventListener","removeEventListener","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","dotsClass","autoplay","cover","div","style","position","width","height","transform","interpolate","America","spider","AboutUs","Modal","showHideClassName","status","selectedMovie","trailer","frameborder","allow","allowfullscreen","title","overview","hideModal","Home","useState","setMovies","setCategory","ModalStatus","setModalStatus","setSelectedMovie","setPageNum","MovieService","results","id","loadMovies","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.cc1540cf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class MoviePreview extends Component {\r\n\r\n    onSelectedMovie = () => {\r\n        this.props.onSelectedMovie(this.props.movie);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\" onClick={this.onSelectedMovie}>\r\n                <img className=\"card-img flip-card-front\" src={`https://image.tmdb.org/t/p/w500/${this.props.movie.poster_path}`}></img>\r\n                {/* <p className=\"card-text flip-card-back\">{this.props.movie.title}</p> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport MoviePreview from './MoviePreview'\r\n\r\nimport right from '../styles/imgs/right-arrow.png'\r\nimport left from '../styles/imgs/left-arrow.png'\r\n\r\n\r\n\r\nexport default class MovieList extends Component {\r\n\r\n    onChangeOption = (ev) => {\r\n        let { value } = ev.target\r\n        this.props.onChangeOption(value)\r\n    }\r\n\r\n    onSelectedMovie = (movie) => {\r\n        this.props.onSelectedMovie(movie);\r\n\r\n    }\r\n\r\n    onChangePage = (ev) => {\r\n        let { name } = ev.target\r\n        this.props.onChangePage(name);\r\n    }\r\n\r\n    render() {\r\n        var settings = {\r\n            dots: true,\r\n            infinite: true,\r\n            speed: 800,\r\n            slidesToShow: 5,\r\n            slidesToScroll: 4,\r\n            arrows: false,\r\n            autoplay: true,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1000,\r\n                    settings: {\r\n                        slidesToShow: 4,\r\n                        slidesToScroll: 4,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 800,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 3,\r\n                        infinite: true,\r\n                        dots: true\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 2,\r\n                        initialSlide: 2\r\n                    }\r\n                },\r\n                {\r\n                    breakpoint: 0,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n\r\n        const { movies } = this.props\r\n        \r\n        return (\r\n            <div className=\"movie-List flex column align-center\">\r\n                <div className=\"sort flex\">\r\n                    <button value=\"trending\" onClick={this.onChangeOption}>Trending Movies <p className=\"line-btm\"></p></button>\r\n                    <button value=\"top_rated\" onClick={this.onChangeOption}>Top Rated<p className=\"line-btm\"></p></button>\r\n                    <button value=\"popular\" onClick={this.onChangeOption}>Popular<p className=\"line-btm\"></p></button>\r\n                    <button value=\"now_playing\" onClick={this.onChangeOption}>Now Playing<p className=\"line-btm\"></p></button>\r\n                </div>\r\n\r\n\r\n                <div className=\"main-contant flex align-center\">\r\n                  {this.props.category!=='trending'?  <img className=\"arrow\" name={'prev'} onClick={this.onChangePage} src={left}></img>:''} \r\n                    <div className=\"flex wrap justify-center\" >\r\n                        {movies.map((movie, i) =>\r\n                            <MoviePreview movie={movie} onSelectedMovie={this.onSelectedMovie} key={i}></MoviePreview>\r\n                        )}\r\n                }\r\n                </div>\r\n                   {this.props.category!=='trending'? <img className=\"arrow\" name={'next'} onClick={this.onChangePage} src={right}></img>:''}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import Axios from 'axios';\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n    }\r\n});\r\n\r\n\r\nexport default {\r\n    getMovies,\r\n    getTrailer\r\n}\r\n\r\nasync function getMovies(category,pageNum) {\r\n    let data;\r\n    if (category === 'trending') data = await Axios.get(`https://api.themoviedb.org/3/${category}/all/day?api_key=2f411839038893c5db27630bd45eb422`)\r\n    else data = await Axios.get(`https://api.themoviedb.org/3/movie/${category}?api_key=2f411839038893c5db27630bd45eb422&language=en-US&page=${pageNum}`)\r\n    return data.data || [];\r\n}\r\n\r\n\r\nasync function getTrailer(movieId) {\r\n    const { data } = await Axios.get(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=2f411839038893c5db27630bd45eb422&language=en-US`)\r\n    return data\r\n}\r\n","import React from 'react'\r\nimport home from '../styles/imgs/home.png'\r\nimport movie from '../styles/imgs/movie.png'\r\nimport about from '../styles/imgs/about.png'\r\n\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\n\r\nexport default function NavBar() {\r\n\r\n\r\n    return (\r\n        <div className=\"main-nav\">\r\n            <p className=\"logo\"></p>\r\n            <ul className=\"nav-text flex column align-center \">\r\n            <Link\r\n                        activeClass=\"active\"\r\n                        to=\"main-header\"\r\n                        // spy={false}\r\n                        smooth={true}\r\n                        offset={-7}\r\n                        duration={700}\r\n                        className=\"nav-wrap-icon\"\r\n                    >\r\n                <img className=\"nav-icon\" src={home}></img> </Link>\r\n\r\n                    <Link\r\n                        activeClass=\"active\"\r\n                        to=\"movie-List\"\r\n                        // spy={false}\r\n                        smooth={true}\r\n                        offset={-7}\r\n                        duration={700}\r\n                        className=\"nav-wrap-icon\"\r\n                    ><img className=\"nav-icon\" src={movie}></img> </Link>\r\n\r\n\r\n                <Link\r\n                    activeClass=\"active\"\r\n                    to=\"about-us\"\r\n                    // spy={true}\r\n                    smooth={true}\r\n                    offset={-7}\r\n                    duration={1500}\r\n                    className=\"nav-wrap-icon\"\r\n                > <img className=\"nav-icon\" src={about}></img>\r\n                </Link>\r\n\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n","// import React, { Component } from 'react'\r\n// import {useSpring, animated} from 'react-spring'\r\n\r\nimport cover from '../styles/imgs/Thor-2.jpg'\r\nimport America from '../styles/imgs/america.jpg'\r\nimport spider from '../styles/imgs/spider.png'\r\nimport camera from '../styles/imgs/02.png'\r\n\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\n\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\n\r\nexport default function Header() {\r\n    const calc = o => `translateY(${o * 0.1}px)`;\r\n\r\n    const ref = useRef();\r\n    const [{ offset }, setOffset] = useSpring(() => ({ offset: 0 }));\r\n\r\n    const handleScroll = () => {\r\n        const posY = ref.current.getBoundingClientRect().top;\r\n\r\n        const offset = window.pageYOffset - posY;\r\n\r\n        setOffset({ offset });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", handleScroll);\r\n        };\r\n    });\r\n\r\n\r\n    var settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 900,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        arrows: false,\r\n        dotsClass: \"slick-dots\",\r\n        autoplay: true,\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"main-header\" ref={ref}>\r\n\r\n            <Slider className=\"crousel\"\r\n                {...settings}>\r\n                <li className=\"main-header \">\r\n                    <img className=\"main-img\" src={cover}></img>\r\n                    <animated.div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            top: '20%',\r\n\r\n                            transform: offset.interpolate(calc)\r\n                        }}\r\n                    >\r\n                        <p className=\"headline\">Game of Thrones  <p className=\"line\"></p></p>\r\n                    </animated.div>\r\n                    <p className=\"main-text\">Game of Thrones is an American fantasy drama television series created<br /> by David Benioff and D. B. Weiss for HBO. It is an adaptation of A Song<br /> of Ice and Fire, George R. R. Martin's series of fantasy novels, the first of<br /> which is A Game of Thrones.</p>\r\n                </li>\r\n\r\n                <li className=\"main-header \">\r\n                    <img className=\"main-img\" src={America}></img>\r\n                    <animated.div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            top: '20%',\r\n\r\n                            transform: offset.interpolate(calc)\r\n                        }}\r\n                    >\r\n                        <p className=\"headline\">Captain America<p className=\"line\"></p></p>\r\n                    </animated.div>\r\n\r\n                    <p className=\"main-text\">Captain America is a fictional superhero appearing in American <br />comic books published by Marvel Comics. Created by cartoonists Joe Simon <br />and Jack Kirby, the character first appeared in Captain America Comics #1</p>\r\n                </li>\r\n\r\n                <li className=\"main-header \">\r\n                    <img className=\"main-img\" src={spider}></img>\r\n                    <animated.div\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            width: '100vw',\r\n                            height: '100vh',\r\n                            top: '20%',\r\n\r\n                            transform: offset.interpolate(calc)\r\n                        }}\r\n                    >\r\n                        <p className=\"headline\">Spider-Men<p className=\"line\"></p></p>\r\n                    </animated.div>\r\n\r\n                    <p className=\"main-text\">Spider-Men is a five-issue, 2012 superhero comic book miniseries published by Marvel Comics,<br /> featuring Peter Parker, the original Spider-Man, and Miles Morales, the second and current<br /> Ultimate Marvel version of Spider-Man</p>\r\n                </li>\r\n            </Slider>\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default class Header extends Component {\r\n\r\n\r\n//     render() {\r\n//         var settings = {\r\n//             dots: true,\r\n//             infinite: true,\r\n//             speed: 900,\r\n//             slidesToShow: 1,\r\n//             slidesToScroll: 1,\r\n//             arrows: false,\r\n//             dotsClass: \"slick-dots\",\r\n//             autoplay: true,\r\n\r\n\r\n//         }\r\n//         return (\r\n//             <div>\r\n//             <img className=\"paralax\" src={camera}></img>\r\n//             <Slider className=\"crousel\"\r\n//                 {...settings}>\r\n//                 <li className=\"main-header \">\r\n//                     <img className=\"main-img\" src={cover}></img>\r\n//                     <p className=\"headline\">Game of Thrones  <p className=\"line\"></p></p>\r\n\r\n//                     <p className=\"main-text\">Game of Thrones is an American fantasy drama television series created<br /> by David Benioff and D. B. Weiss for HBO. It is an adaptation of A Song<br /> of Ice and Fire, George R. R. Martin's series of fantasy novels, the first of<br /> which is A Game of Thrones.</p>\r\n//                 </li>\r\n\r\n//                 <li className=\"main-header \">\r\n//                     <img className=\"main-img\" src={America}></img>\r\n//                     <p className=\"headline\">Captain America<p className=\"line\"></p></p>\r\n//                     <p className=\"main-text\">Captain America is a fictional superhero appearing in American <br />comic books published by Marvel Comics. Created by cartoonists Joe Simon <br />and Jack Kirby, the character first appeared in Captain America Comics #1</p>\r\n//                 </li>\r\n\r\n//                 <li className=\"main-header \">\r\n//                     <img className=\"main-img\" src={spider}></img>\r\n//                     <p className=\"headline\">Spider-Men<p className=\"line\"></p></p>\r\n//                     <p className=\"main-text\">Spider-Men is a five-issue, 2012 superhero comic book miniseries published by Marvel Comics,<br /> featuring Peter Parker, the original Spider-Man, and Miles Morales, the second and current<br /> Ultimate Marvel version of Spider-Man</p>\r\n//                 </li>\r\n//             </Slider>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }","import React from 'react'\r\n\r\nexport default function AboutUs() {\r\n    return (\r\n        <div className=\"about-us flex column align-center justify-center\">\r\n            <h2 className=\"headline\">About Us</h2>\r\n            <p className=\"main-text\">It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).<br/><br/>\r\n            There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nexport default function Modal(props) {\r\n    const showHideClassName = props.status ? \" block\" : \" none\";\r\n\r\n    return (\r\n        <div className={`modal ${showHideClassName}`}>\r\n            <div className=\"main-content flex\">\r\n            <iframe width=\"400\" height=\"400\" src={`https://www.youtube.com/embed/${props.selectedMovie.trailer}`} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n            <div className=\"modal-text flex column align-baseline\">\r\n                <p className=\"headline\">{props.selectedMovie.title}</p>\r\n                <p>{props.selectedMovie.overview}</p>\r\n                <button onClick={props.hideModal}>Close</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport MovieList from '../cmps/MovieList'\r\nimport MovieService from '../services/MovieService'\r\nimport NavBar from '../cmps/NavBar';\r\nimport Header from '../cmps/Header';\r\nimport AboutUs from '../cmps/AboutUs';\r\nimport Modal from '../cmps/Modal'\r\n\r\nexport default function Home() {\r\n    const [movies, setMovies] = useState([])\r\n    const [category, setCategory] = useState('trending')\r\n    const [ModalStatus, setModalStatus] = useState(false)\r\n    const [selectedMovie, setSelectedMovie] = useState({})\r\n    const [pageNum, setPageNum] = useState(1)\r\n\r\n    async function loadMovies() {\r\n        let movies = await MovieService.getMovies(category, pageNum);\r\n        setMovies(movies.results)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        loadMovies()\r\n        // return function () {\r\n        // }\r\n    }, [category, pageNum]);\r\n\r\n\r\n\r\n    function onChangeOption(value) {\r\n        setCategory(value)\r\n    }\r\n\r\n    async function onSelectedMovie(movie) {\r\n        const trailer = await MovieService.getTrailer(movie.id)\r\n        movie.trailer = trailer.results[0].key || null\r\n        setSelectedMovie(movie)\r\n        setModalStatus(true)\r\n    }\r\n\r\n\r\n    function hideModal() {\r\n        setModalStatus(false)\r\n        setSelectedMovie('')\r\n    };\r\n\r\n    function onChangePage(name) {\r\n        if (name === 'next') setPageNum(pageNum + 1)\r\n        else setPageNum((pageNum - 1))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n            <div>\r\n                <NavBar></NavBar>\r\n                    <Header></Header>\r\n                {selectedMovie && <Modal status={ModalStatus} hideModal={hideModal} selectedMovie={selectedMovie}></Modal>}\r\n                {movies && <MovieList category={category} onChangePage={onChangePage} onChangeOption={onChangeOption} onSelectedMovie={onSelectedMovie} movies={movies}></MovieList>}\r\n                <AboutUs></AboutUs>\r\n            </div>\r\n\r\n    )\r\n\r\n}\r\n","import React from 'react';\nimport Home from './pages/Home';\nimport './styles/global.scss'\n\n\nfunction App() {\n  return (\n        <Home></Home>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n      <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/right-arrow.469ac996.png\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow.2581596e.png\";","module.exports = __webpack_public_path__ + \"static/media/home.de91132c.png\";","module.exports = __webpack_public_path__ + \"static/media/movie.fcee831d.png\";","module.exports = __webpack_public_path__ + \"static/media/about.9da23ee6.png\";","module.exports = __webpack_public_path__ + \"static/media/Thor-2.13ed8ae2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/america.63816f99.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spider.07a0d2a7.png\";","module.exports = __webpack_public_path__ + \"static/media/02.4b986d16.png\";"],"sourceRoot":""}